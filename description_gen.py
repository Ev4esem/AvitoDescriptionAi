import requests

def generate_description_from_openai(prompt, api_key):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI API"""
    url = 'https://api.openai.com/v1/chat/completions'
    
    headers = {
        'Authorization': f'Bearer {api_key}',
        'Content-Type': 'application/json'
    }
    
    data = {
        'model': 'gpt-3.5-turbo',
        'messages': [
            {'role': 'system', 'content': '–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ê–≤–∏—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–ø—á–∞—Å—Ç—è—Ö.'},
            {'role': 'user', 'content': prompt}
        ],
        'temperature': 0.7,
        'max_tokens': 4000
    }
    
    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()
        result = response.json()
        
        if result.get('choices') and len(result['choices']) > 0:
            return result['choices'][0]['message']['content'].strip()
        else:
            return "–û—à–∏–±–∫–∞: –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {str(e)}")
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {str(e)}"

def create_description_prompt(brand, original_part, search_result, applicability_result, oem_result):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Å —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    # –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–æ—Å—Ç–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö
    article_details = search_result.get("data", {}).get("list", [])
    name_part = ""
    if article_details:
        name_part = article_details[0].get("ART_PRODUCT_NAME", "")
    
    # OEM –Ω–æ–º–µ—Ä–∞ —É–∂–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    oems = [item.get("ARL_NUMBER", "") for item in oem_result.get("data", {}).get("list", [])]
    
    # –ü—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å —É–∂–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    applicabilities = [item.get("NAME", "") for item in applicability_result.get("data", {}).get("list", [])]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–Ω–∞–ª–æ–≥–∏
    articles = "\n".join([f"{item.get('ART_ARTICLE_NR', '')} ({item.get('SUP_BRAND', '')})" for item in article_details])
    
    # –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    cars_list = "\n".join(applicabilities)
    
    # –°–ø–∏—Å–æ–∫ OEM –Ω–æ–º–µ—Ä–æ–≤
    oems_text = ", ".join(oems)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = (
        "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥–∞—é—â–µ–µ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è –ê–≤–∏—Ç–æ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. "
        "–ò—Å–ø–æ–ª—å–∑—É—è —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n"
        f"1. **–ù–∞–∑–≤–∞–Ω–∏–µ**: –°–¥–µ–ª–∞–π —Ç–æ—á–µ—á–Ω–æ–µ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—Ç–æ–± –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∞–≤–∏—Ç–æ —Å—á–∏—Ç—ã–≤–∞–ª–∏ –µ–≥–æ —Ö–æ—Ä–æ—à–æ \"{name_part} –¥–ª—è {brand} {original_part}\". \n\n"
        f"2. –¶–µ–Ω–∞: –∑–∞ 1 —à—Ç—É–∫—É –∑–¥–µ—Å—å —Ü–µ–Ω—É –Ω–µ –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –∂–µ –æ—Å—Ç–∞–≤–ª—è–µ—à—å\n\n"
        f"3. –û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞–ø–∏—à–∏, —á—Ç–æ —ç—Ç–æ –Ω–æ–≤–∞—è –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç—å. –ü—Ä–∏–º–µ—Ä: \"–ù–æ–≤–∞—è, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∑–∞–ø—á–∞—Å—Ç—å, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å.\"\n\n"
        f"4. –ù–æ–º–µ—Ä –∑–∞–ø—á–∞—Å—Ç–∏: –£–∫–∞–∂–∏ –∞—Ä—Ç–∏–∫—É–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä, {original_part}.\n\n"
        f"5. –ö—Ä–æ—Å—Å-–Ω–æ–º–µ—Ä–∞: {oems_text}. \n\n"
        f"6. –ê–Ω–∞–ª–æ–≥–∏: {articles}\n\n"
        f"7. –ü—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å:\n"
        f"    –ü–µ—Ä–µ—á–∏—Å–ª–∏ –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —ç—Ç–∞ –∑–∞–ø—á–∞—Å—Ç—å –ø–æ–¥—Ö–æ–¥–∏—Ç. –ü—Ä–∏–º–µ—Ä:\n"
        f"    \"–ü–æ–¥—Ö–æ–¥–∏—Ç –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏: \n"
        f"    {cars_list}\"\n\n"
        f"8. –£—Å–ª–æ–≤–∏—è:\n"
        f"    - üöó **–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ —Å –ø–æ–¥–±–æ—Ä–æ–º –ø–æ VIN** + —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ (–≤ 10 –º –æ—Ç –Ω–∞—Å).\n"
        f"    - üõ† **–ì–∞—Ä–∞–Ω—Ç–∏—è –¥–æ 6 –º–µ—Å—è—Ü–µ–≤** –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π.\n"
        f"    - üöõ **–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞** | –ö—É—Ä—å–µ—Ä–æ–º –ø–æ –ú–æ—Å–∫–≤–µ ‚Äî –∑–∞ 1 —á–∞—Å, –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º ‚Äî –≤ –¥–µ–Ω—å –∑–∞–∫–∞–∑–∞!\n"
        f"    - üíµ **–û–ø–ª–∞—Ç–∞ –¥–ª—è –ò–ü –∏ –û–û–û**: –ë–µ–∑ –ù–î–° +6%, –° –ù–î–° +26%.\n"
        f"    - üîß **–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ**: –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π.\n"
        f"    - üîë **–ü–æ–¥–±–æ—Ä –∑–∞–ø—á–∞—Å—Ç–µ–π –ø–æ VIN**: –ü–æ–¥–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –Ω–∞–º VIN-–∫–æ–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n"
        f"    - üèÜ **–û—Ç–∑—ã–≤—ã**: –ú—ã –≥–æ—Ä–¥–∏–º—Å—è –≤—ã—Å–æ–∫–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏ –æ—Ç –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n"
        f"9. –ü–æ–¥–¥–µ—Ä–∂–∫–∞:\n"
        f"    ‚úÖ –ú—ã –∫–æ–º–ø–∞–Ω–∏—è **DriveLine, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –∑–∞–ø—á–∞—Å—Ç–∏ –Ω–∞–ø—Ä—è–º—É—é –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ ‚Äî –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤. \n"
        f"    –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ–º —Å—Ä–æ–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n\n"
        f"10. –ê–¥—Ä–µ—Å–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n"
        f"    - üìç **–ö—É–Ω—Ü–µ–≤—Å–∫–∏–π –∞–≤—Ç–æ—Ä—ã–Ω–æ–∫, –Æ–∂–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞, –ê–≤—Ç–æ–∫–∏—Ç –ê1** (—É–ª. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è, —Å12)\n"
        f"    - üìç **–ö–∞—à–∏—Ä—Å–∫–æ–µ —à–æ—Å—Å–µ 61–∫3–∞** (–ú–æ—Å–∫–≤–∞, –¢–¶ \"–¢–Ø–ù–¨–Ø\", 0 —ç—Ç–∞–∂, –õ–∏–Ω–∏—è –í, –ü–∞–≤–∏–ª—å–æ–Ω –í, 29)\n\n"
        f"11. –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 19:00 (–ø–æ –ø—Ä–æ—Å—å–±–µ –º–æ–∂–µ–º –∑–∞–¥–µ—Ä–∂–∞—Ç—å—Å—è).\n\n"
        f"12. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–±–æ—Ä–∞, —Ä–∞–∑–±–æ—Ä–∫–∏, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏, –∑–∞–º–µ–Ω—ã, —Ç—Ä–æ—Å –Ω–∞—Ç—è–∂–∏—Ç–µ–ª—è, Mercedes-Benz, —Ç–æ—Ä–º–æ–∑–∞, –∫—É–∑–æ–≤–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞.\n\n"
        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**:\n"
        f"    - –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å —Å–∏–Ω–æ–Ω–∏–º—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ \"—Ç—Ä–æ—Å –Ω–∞—Ç—è–∂–∏—Ç–µ–ª—è\", \"—Ä–µ–º–µ–Ω—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞\", \"–Ω–∞—Ç—è–∂–∏—Ç–µ–ª—å —Ä–µ–º–Ω—è\" –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏.\n"
        f"    - –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –¥–µ–ª–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–∏–º, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º, —á—Ç–æ–±—ã –æ–Ω–æ –ª–µ–≥–∫–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–ª–æ—Å—å –∏ –ø—Ä–∏–≤–æ–¥–∏–ª–æ –∫ –ø—Ä–æ–¥–∞–∂–∞–º."
    )
    
    return prompt

def generate_description_from_prompt(brand, original_part, search_result, applicability_result, oem_result, api_key):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç LangChain"""
    prompt = create_description_prompt(brand, original_part, search_result, applicability_result, oem_result)
    return generate_description_from_openai(prompt, api_key)